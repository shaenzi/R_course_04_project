---
title: "Development notes"
author: "Sara"
date: "`r format(Sys.Date(), '%d %b %Y')`"
format: 
  html:
    self-contained: true
---

# Technical stuff

- where should I run the data loading?
- where can I load the data so that it is also accessible to the ui? (needed for sensible input choices)
- how can/should I test the module?
- how can I add an about page? from html? from Rmarkdown? from Markdown?

# UI considerations

- make the module in a kind of card?
- general layout? add text/about/possibly another plot
- the map legend is tiny
- not sure about the table [widths](https://glin.github.io/reactable/articles/examples.html#column-resizing), column names, their alignment etc.
- general low-key effort to improve the table?
- what kind of input? drop down, radio button, ...
- mobile? 


# Content considerations

## Locations

it would be nice to add the locations from where the emergency services start?
see [ambulances](https://www.stadt-zuerich.ch/pd/de/index/schutz_u_rettung_zuerich/sanitaet/so_arbeiten_wir/rettungsdienstwachen.html) and [fire services](https://www.stadt-zuerich.ch/pd/de/index/schutz_u_rettung_zuerich/feuerwehr/wir_ueber_uns/einsatzgebiet.html)
would have to manually parse/add those 6 addresses to a small dataset

## Lake

Better to take out the lake in the map?

# Concrete todos

- [x] write ReadMe
- [x] load data in better place - probably not ideal but seems to work
- [x] make year selector choices dependent on data - probably not ideal but seems to work
- [ ] make map interactive
- write tests
  - [x] for data reading
  - [ ] for plotting
  - [ ] for the module
  - where should I test whether the data that I load has the columns I need for the plotting and the table? in the data loading test if everything depends on it
- emergency calls
  - [ ] play around with the date and come up with a good plot
  - [ ] make a new module for this (is it interactive?)
  - [ ] decide on and adjust overall UI

# known issues

- data loading function is called directly where it is defined in the utils. pro: this makes the data available to the ui and the server and means this is run before the app is started. con: does not feel like a clean way of doing things?
